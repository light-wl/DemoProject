<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.light</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>demo</name>
    <description>demo</description>

    <modules>
        <module>light-excel</module>
        <module>light-controller</module>
        <module>light-start</module>
        <module>light-mq</module>
        <module>light-dubbo</module>
        <module>light-common</module>
    </modules>

    <properties>
        <lombok.version>1.16.18</lombok.version>
    </properties>
    <!--
    1、starter 进行统一管理，统一调用；
    2、自己模块单独使用的包，自己管理，就不在这里统一管理版本号了；
    3、两个或者以上的包不需要统计管理，统一放在最外层调用即可；
    -->
    <dependencyManagement>
        <dependencies>
            <!--引入注解：@Slf4j-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--        @Slf4j日志抽象层的依赖      -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!--        Spring依赖开始        -->
        <!--Spring Controller（@RestController,@PostMapping,@Component等）中注解使用-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.1.5.RELEASE</version>
        </dependency>
        <!-- 切面aspect依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!--        Spring依赖结束        -->


        <!--        Dubbo 的依赖开始       -->
        <!--dubbo依赖（启动类要加@EnableDubbo，只能在启动类的pom中添加该包了）-->
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
            <version>3.1.0</version>
        </dependency>
        <!--        Dubbo 的依赖结束       -->
    </dependencies>

</project>
